openapi: 3.0.3
info:
  title: Capstone-Express-ORM - OpenAPI 3.0
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

tags:
  - name: auth
    description: Login/Register user
  - name: users
    description: Users
  - name: Images
    description: Image
  - name: Comments
    description: Comments

paths:
  /api/auth/register:
    post:
      tags:
        - auth
      summary: Register user
      description: Register
      operationId: Register
      requestBody:
        description: Register
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '201':
          description: successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You have successfully registered.
        '409':
          description: Email already exists.
  /api/auth/login:
    post:
      tags:
        - auth
      summary: Login user
      description: Login
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: nhathanh.ntn@gmail.com
                password:
                  type: string
                  example: 123123.
        required: true
      responses:
        200:
          description: Successful

        400:
          description: Email not found.
  /api/users:
    get:
      tags:
        - users
      summary: get list user
      description: get list user
      operationId: listUser
      security:
        - bearerAuth: []
      responses:
        200:
          description: success
  /api/images:
    get:
      tags:
        - Images
      summary: Get list image, filter name
      operationId: listImage
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name to filter users by
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
  /api/images/detail/{id}:
    get:
      tags:
        - Images
      security:
        - bearerAuth: []
      summary: Get image by id
      description: get detail image
      operationId: getImageById
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: The id to filter image by id
          required: true
      responses:
        200:
          description: success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Image'
                  message:
                    type: string
        400:
          description: error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/comment/{id}:
    get:
      tags:
        - Comments
      summary: get comment by id image
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: The id to filter Comment by id image
          required: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  message:
                    type: string
        404:
          description: error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/images/detail/{id}/saved:
    get:
      tags:
        - Images
      summary: get imamge saved by id image
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The id to find image saved
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  saved:
                    type: boolean
                  message:
                    type: string
        400:
          description: error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/users/detail:
    get:
      tags:
        - users
      summary: get thông tin user
      security:
        - bearerAuth: []
      operationId: get detail user
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
  /api/images/user-save:
    get:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: GET danh sách ảnh đã lưu theo user id
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  message:
                    type: string
  /api/images/user-create:
    get:
      tags:
        - users
      summary: GET danh sách ảnh đã tạo theo user id.
      security:
        - bearerAuth: []
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
  /api/images/{id}:
    delete:
      tags:
        - Images
      summary: DELETE xóa ảnh đã tạo theo id ảnh.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: id image
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
  /api/images/:
    post:
      tags:
        - Images
      security:
        - bearerAuth: []
      summary: POST thêm một ảnh
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hinhAnh:
                  type: string
                  format: binary
      responses:
        201:
          description: success
  /api/users/update:
    put:
      tags:
        - users
      summary: PUT thông tin cá nhân của user.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hoTen:
                  type: string
                tuoi:
                  type: string
                anhDaiDien:
                  type: string
      responses:
        200:
          description: success
  /api/users/update-avatar:
    post:
      tags:
        - users
      security:
        - bearerAuth: []
      summary: POST udload avatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hinhAnh:
                  type: string
                  format: binary
      responses:
        200:
          description: success
  /api/comment:
    post:
      tags:
        - Comments
      security:
        - bearerAuth: []
      summary: create comment image
      operationId: createComment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hinhId:
                  type: string
                noiDung:
                  type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/images/save:
    post:
      tags:
        - Images
      summary: POST thêm một ảnh của user.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hinhId:
                  type: string
      responses:
        201:
          description: success

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Register:
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: password
    Login:
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: password
    User:
      type: object
      properties:
        nguoi_dung_id:
          type: integer
          example: 1
        email:
          type: string
          example: nhathanh.ntn1@gmail.com
        ho_ten:
          type: string
          nullable: true
          example: null
        tuoi:
          type: string
          nullable: true
          example: null
        anh_dai_dien:
          type: string
          nullable: true
          example: null
    Image:
      type: object
      properties:
        hinh_id:
          type: integer
          example: 1
        ten_hinh:
          type: string
          example: coder.jpg
        duong_dan:
          type: string
          example: https://res.cloudinary.com/drmdxrzwe/image/upload/v1731219402/uploads/c.jpg
        mo_ta:
          type: string
          nullable: true
          example: null
        nguoi_dung_id:
          type: integer
          example: 1
    error:
      type: object
      properties:
        error:
          type: string
